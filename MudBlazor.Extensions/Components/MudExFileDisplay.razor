@using System.IO
@using MudBlazor.Extensions.Helper
@namespace MudBlazor.Extensions.Components

<BrowserDetect @bind-BrowserInfo="@Info" />
<div class="mud-ex-file-display-container">

    <MudToolBar Class="mud-ex-file-display-toolbar" Style="height: 15px;padding: 0;margin-bottom: 4px;" Dense="true">
        <MudSpacer />
        <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight" Dense="true" Size="Size.Small" Icon="@Icons.Material.Filled.MoreVert">
            <MudText Class="mud-ex-file-display-toolbar-text">@FileName</MudText>
            <MudMenuItem>Profile</MudMenuItem>
            <MudMenuItem>My account</MudMenuItem>
            <MudMenuItem>Logout</MudMenuItem>
        </MudMenu>
    </MudToolBar>
    @{
        var control = _componentForFile;
    }
    @if (control.ControlType != null)
    {
        @if (control.ShouldAddDiv)
        {
            <div class="mud-ex-file-display">
                <DynamicComponent Type="@control.ControlType" Parameters="@control.Parameters" />
            </div>
        }
        else
        {
            <DynamicComponent Type="@control.ControlType" Parameters="@control.Parameters" />
        }
    }
    else
    {
        <div class="mud-ex-file-display">
            <MudElement UserAttributes="@renderInfos.attributes" HtmlTag="@renderInfos.tag" />
        </div>
    }

    @if (AllowDownload)
    {
        <div class="mud-ex-download-file">
            <MudTooltip Placement="Placement.Left" Delay="600" Color="Color.Primary" Text="@($"{_localizer.TryLocalize("Download")} ({FileName})")">
                <MudIconButton Style="float: right;" OnClick="@(Download)" Icon="@Icons.Filled.Download"></MudIconButton>
            </MudTooltip>
        </div>
    }
    
    @if (ShowContentError)
    {
        <div id="content-type-display-error">
            <MudAlert Class="mud-alert-close-no-flex" Severity="Severity.Error" Variant="Variant.Outlined" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="CloseContentError">
                <p>
                    @if (!string.IsNullOrWhiteSpace(CustomContentErrorMessage))
                    {
                        @CustomContentErrorMessage
                    }
                    else
                    {
                        @_localizer.TryLocalize("The content type {0} cannot be displayed without a suitable plugin", ContentType)
                    }
                </p>

                @if (PossiblePlugin != null)
                {
                    <MudButton HtmlTag="label"
                       Class="w-100 my-4"
                       Variant="Variant.Text"
                       Color="Color.Primary"
                       Size="Size.Small"
                       Href="@PossiblePlugin.Url"
                       Target="_blank"
                       StartIcon="@(Icons.TwoTone.Shop)">
                        @(_localizer.TryLocalize("The Plugin '{0}' may be able to help", PossiblePlugin.Name))
                    </MudButton>
                }
            </MudAlert>
        </div>
    }

</div>