@using Microsoft.Extensions.Localization
@using MudBlazor.Extensions.Helper
@using Microsoft.Extensions.DependencyInjection;
@namespace MudBlazor.Extensions.Components

<MudDialog Class="@Class">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Color="Color.Error" Icon="@Icon" Class="mr-3 mb-n1" />
            @MudDialog.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText>@Message</MudText>
    </DialogContent>
    <DialogActions>
        @if (Buttons?.Any() == true)
        {
            foreach (var action in Buttons)
            {
                <MudButton Color="@action.Color" Variant="@action.Variant" OnClick="@(() => Submit(action.Result))">@localizer.TryLocalize(action.Label)</MudButton>
            }
        }
        else
        {
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Cancel">@localizer.TryLocalize("Close")</MudButton>
        }
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] private IServiceProvider _serviceProvider { get; set; }

    private IStringLocalizer<MudExMessageDialog> localizer => _serviceProvider.GetService<IStringLocalizer<MudExMessageDialog>>();
    [Parameter] public string Class { get; set; }
    [Parameter] public string Message { get; set; }
    [Parameter] public string Icon { get; set; }
    [Parameter] public IEnumerable<string> Details { get; set; }
    [Parameter] public MudExDialogResultAction[] Buttons { get; set; }

    void Submit(DialogResult result)
    {
        MudDialog.Close(result);
    }

    void Cancel() => MudDialog.Cancel();

  
}