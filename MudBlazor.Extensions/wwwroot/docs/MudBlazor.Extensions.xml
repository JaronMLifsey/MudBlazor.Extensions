<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MudBlazor.Extensions</name>
    </assembly>
    <members>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.None">
            Can be used if you don't want to move the content but use the found or not found content
        </member>
        <member name="T:MudBlazor.Extensions.Components.MoveContent">
            <summary>
            Component to move the ChildContent to a specific element that can defined by ElementSelector.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExCardList`1">
            <summary>
            Simple Card List with a hover effect.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExChipSelect`1">
            <summary>
            A component that allows the user to select a value from a list of possible values and display it as Chips or default Combobox.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorBubble">
            <summary>
            A Component to quickly select a color
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorEdit">
            <summary>
            Component to Edit MudExColor
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ForceSelectOfMudColor">
            <summary>
            Set to true to have always MudColor filled in MudExColor as the OneOf value.
            With this setting turned on, you can use this edit control for all of your Color Properties
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorPicker">
            <summary>
            A simple ColorPicker component that inherits the MudColorPicker but adds the possibility to delay the close event and use a native picker component from browser
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExCultureSelect">
            <summary>
            Drop down component to select a culture
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDialog.Show(System.String,MudBlazor.DialogOptions)">
            <summary>Show this inlined dialog</summary>
            <param name="title"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExDivider">
            <summary>
            A divider to separate content
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.UseBorder">
            <summary>
            If this option is true border size is used instead of element size
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExEnumSelect`1">
            <summary>
            Drop down component to select an enum value or multiple on flags enums
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplay">
            <summary>
            Component to display a file in a iframe or object tag or in a registered viewer that implements IMudExFileDisplay
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.FallBackInIframe">
            Should be true if file is not a binary one
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ViewDependsOnContentType">
            <summary>
            Set this to false to show everything in iframe/object tag otherwise zip, images audio and video will displayed in correct tags
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.HandleContentErrorFunc">
            A function to handle content error. Return true if you have handled the error and false if you want to show the error message
            For example you can reset Url here to create a proxy fallback or display own not supported image or what ever.
            If you reset Url or Data here you need also to reset ContentType
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayDialog">
            <summary>
            Dialog to display a file using <see cref="T:MudBlazor.Extensions.Components.MudExFileDisplay"/> component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.HandleContentErrorFunc">
            A function to handle content error. Return true if you have handled the error and false if you want to show the error message
            For example you can reset Url here to create a proxy fallback or display own not supported image or what ever.
            If you reset Url or Data here you need also to reset ContentType
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.FallBackInIframe">
            Should be true if file is not a binary one
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ViewDependsOnContentType">
            <summary>
            Set this to false to show everything in iframe/object tag otherwise zip, images audio and video will displayed in correct tags
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayZip">
            <summary>
            A Component to display the content of a zip file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ViewDependsOnContentType">
            <summary>
            Set this to false to show everything in iframe/object tag otherwise zip, images audio and video will displayed in correct tags
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.HandleContentErrorFunc">
            A function to handle content error. Return true if you have handled the error and false if you want to show the error message
            For example you can reset Url here to create a proxy fallback or display own not supported image or what ever.
            If you reset Url or Data here you need also to reset ContentType
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFontSelect">
            <summary>
            Dropdown list component to select one ore more fonts
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExGradientText">
            <summary>
            A Component to display text with a gradient foreground or background
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExMessageDialog">
            <summary>
            Simple MessageDialog
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExPopover">
            <summary>
            A Popover can be used to display some content on top of another.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSlideBar">
            <summary>
            A Component that can used to slide in a ChildContent from the bottom, top , left or right by mouseover.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitPanel">
            <summary>
            A SplitPanel Component 
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitPanelItem">
            <summary>
            SplitPanelItem for MudExSplitPanel component
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitter">
            <summary>
            A Splitter Component
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExTaskBar">
            <summary>
            MudExTaskBar inherits the MudExSlideBar and provides a tabbar to select non modal dialogs. Just provide <MudExTaskBar/> somewhere in your Layout
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.IsDark">
            <summary>
            This bool represents a tri state. True to edit only dark color palette, false to edit only light color palette and null to edit both
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.Presets">
            <summary>
            This collection of presets will be used to populate the dropdown for preset selection
            If its allowed user can also add or delete from this collection
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AllowPresetsEdit">
            <summary>
            If true you can add or delete themes
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.CanDelete">
            <summary>
            If function returns true user can delete theme from param
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExThemeSelect`1">
            <summary>
            Component to select a theme from a list of themes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectVariant">
            <summary>
            Variant if SelectionMode is ThemeSelectionMode.Select
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Style">
            <summary>
            Style for the select component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Class">
            <summary>
            Class for the select component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.ItemStyle">
            <summary>
            Style for one theme item
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.ItemClass">
            <summary>
            Class for one theme item
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectionMode">
            <summary>
            Gets or sets the selection mode of the component with a default value of <see cref="F:MudBlazor.Extensions.Components.ThemeSelectionMode.Select"/>.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewMode">
            <summary>
            Gets or sets the preview mode of the component with a default value of <see cref="F:MudBlazor.Extensions.Components.ThemePreviewMode.BothDiagonal"/>.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Available">
            <summary>
            Gets or sets the available themes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Selected">
            <summary>
            Gets or sets the currently selected theme.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Selected"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedThemeChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedTheme"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValueChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValue"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValue">
            <summary>
            Gets or sets the selected theme ads object to allow binding to non generic components
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedTheme">
            <summary>
            Gets or sets the selected theme from the available themes.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewImage(MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a preview image of the theme with the specified dimensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewImage(`0,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a preview image of the specified theme with the specified dimensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.IsOpen">
            <summary>
            Returns a boolean indicating whether the dropdown menu of the component is open or closed.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.GetThemeNameContainerStyle">
            <summary>
            Returns the style of the container of the theme name label.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemePreviewMode">
            <summary>
            Enumeration representing the preview mode of a theme.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemeSelectionMode">
            <summary>
            Enumeration representing the selection mode of a theme.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExToggleableSearch">
            <summary>
            Simple component to expand a Search field 
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExUploadEdit`1">
            <summary>
            A Component to edit and upload a list of files
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.IObjectMetaConfiguration`1">
            <summary>
            Interface for configuring the <see cref="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1"/> component for a meta of TModel.
            </summary>
            <typeparam name="TModel">Model type to configure</typeparam>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.IObjectMetaConfiguration`1.ConfigureAsync(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditMeta{`0})">
            <summary>
            Configure meta 
            </summary>
            <param name="meta"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1">
            <summary>
            Powerful component to edit a set of items and their properties.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Height">
            <summary>
            Gets or sets the height of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.MaxHeight">
            <summary>
            Gets or sets the maximum height of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SizeUnit">
            <summary>
            Gets or sets the size unit for the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Style">
            <summary>
            Gets or sets the style of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Items">
            <summary>
            Gets or sets the collection of items to be edited.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemsChanged">
            <summary>
            Gets or sets the event callback for when items are changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemToStringFunc">
            <summary>
            Gets or sets the function to convert an item to a string.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextAdd">
            <summary>
            Gets or sets the text for the add button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextRemoveAll">
            <summary>
            Gets or sets the text for the remove all button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextEdit">
            <summary>
            Gets or sets the text for the edit button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Label">
            <summary>
            Gets or sets the label of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Virtualize">
            <summary>
            Gets or sets a value indicating whether the collection should be virtualized.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.HelperText">
            <summary>
            Gets or sets the helper text for the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemIcon">
            <summary>
            Gets or sets the icon for each item in the collection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveIcon">
            <summary>
            Gets or sets the icon for the remove button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveAllIcon">
            <summary>
            Gets or sets the icon for the remove all button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AddIcon">
            <summary>
            Gets or sets the icon for the add button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.EditIcon">
            <summary>
            Gets or sets the icon for the edit and preview button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ViewIcon">
            <summary>
            Gets or sets the icon for the view button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Variant">
            <summary>
            Gets or sets the variant of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ShowClearButton">
            <summary>
            Gets or sets a value indicating whether to show the clear button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowAdd">
            <summary>
            Gets or sets a value indicating whether to allow adding items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowEditOrPreview">
            <summary>
            Gets or sets a value indicating whether to allow editing or previewing items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowRemove">
            <summary>
            Gets or sets a value indicating whether to allow removing items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.DialogOptions">
            <summary>
            Gets or sets the options for the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarColor">
            <summary>
            Gets or sets the color of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarPosition">
            <summary>
            Gets or sets the position of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.StickToolbar">
            <summary>
            Gets or sets a value indicating whether the toolbar sticks.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.StyleToolbar">
            <summary>
            Gets or sets the style of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ClassToolbar">
            <summary>
            Gets or sets the class of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Class">
            <summary>
            Gets or sets the class of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarButtonColor">
            <summary>
            Gets or sets the color of the toolbar buttons.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.FilterMode">
            <summary>
            Gets or sets the filter mode.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Filter">
            <summary>
            Gets or sets the filter string.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SearchIcon">
            <summary>
            Gets or sets the icon for the search button.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetMudGridStyle">
            <summary>
            Generates the style string for the MudGrid component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetToolbarStyle">
            <summary>
            Generates the style string for the toolbar.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetStyle">
            <summary>
            Generates the style string for the collection editor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.OnParametersSet">
            <summary>
            Called when the parameters are set.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Remove(`0)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RaiseChanged">
            <summary>
            Raises the ItemsChanged event.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveAll">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Edit(`0)">
            <summary>
            Edits an item in the collection.
            </summary>
            <param name="item">The item to edit.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SetValue(`0,`0)">
            <summary>
            Sets the value of an item in the collection.
            </summary>
            <param name="item">The item to set the value on.</param>
            <param name="newValue">The new value for the item.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.View(`0)">
            <summary>
            Views an item in the collection.
            </summary>
            <param name="item">The item to view.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemNameRender(`0)">
            <summary>
            Renders the item name
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Add">
            <summary>
            Opens the dialog to add an item to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1">
            <summary>
            A powerful component to edit an object and its properties.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.UseLegacyRenderFilter">
            <summary>
            Set this to true, to use the old render behavior without references for ignored fields. 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.IsLoading">
            <summary>
            Whether the component should show a loading indicator.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Value">
            <summary>
            The object to be edited by the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoUpdateConditions">
            <summary>
            Whether the component should automatically update all registered Conditions.
            Otherwise you need to call UpdateAllConditions on your own.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Height">
            <summary>
            The height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MaxHeight">
            <summary>
            The maximum height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SizeUnit">
            <summary>
            The size unit of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportNeedsConfirmation">
            <summary>
            Whether the import action needs confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StateKey">
            <summary>
            The state key for saving and restoring the component state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportConfirmText">
            <summary>
            The text for confirming an import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportCancelText">
            <summary>
            The text for cancelling an import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Virtualize">
            <summary>
            Whether the component should be virtualized.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.LightOverlayLoadingBackground">
            <summary>
            Whether the component should have a light overlay loading background.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoOverlay">
            <summary>
            Whether the component should automatically display an overlay when loading.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolbarButtonColor">
            <summary>
            The color of the toolbar buttons.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AddScrollToTop">
            <summary>
            Whether the component should add a scroll to top button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ScrollToTopPosition">
            <summary>
            The position of the scroll to top button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AllowExport">
            <summary>
            Whether export functionality is enabled.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AllowImport">
            <summary>
            Whether import functionality is enabled.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoSaveRestoreState">
            <summary>
            Whether the component should automatically save and restore its state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StateTargetStorage">
            <summary>
            The storage location for saving and restoring component state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExportFileName">
            <summary>
            The file name for exporting the component data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportIcon">
            <summary>
            The icon to display for the import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SearchIcon">
            <summary>
            The icon to display for the search action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExpandCollapseIcon">
            <summary>
            The icon to display for expanding and collapsing.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExportIcon">
            <summary>
            The icon to display for the export action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoSkeletonOnLoad">
            <summary>
            Whether to automatically display the skeleton loading state on component load.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolbarColor">
            <summary>
            The color of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupLineColor">
            <summary>
            The color of the group lines in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupElevation">
            <summary>
            The elevation of the group.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarElevation">
            <summary>
            The elevation of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Class">
            <summary>
            A CSS class for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Style">
            <summary>
            The inline CSS style for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarClass">
            <summary>
            A CSS class for the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarPaperClass">
            <summary>
            A CSS class for the component toolbar paper.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StickyToolbar">
            <summary>
            Whether the toolbar should be sticky to the top of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StickyToolbarTop">
            <summary>
            The positioning CSS value for a sticky toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AfterImport">
            <summary>
            Called after the component has imported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AfterExport">
            <summary>
            Called after the component has exported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BeforeExport">
            <summary>
            Called before the component exports data. Provides the export data to be manipulated.
            If you need to change content of parameter to manipulate export data you can do it here
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BeforeImport">
            <summary>
            Called before the component imports data. Provides the import data to be manipulated.
            Here you can change content of parameter to manipulate import data
            For example you can remove some properties or change the values
            This is called before the import is executed
            importData.Json = "{\"FirstName\": \"Changed Test\"}";
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ValueChanged">
            <summary>
            Called when the edited value is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.PropertyChanged">
            <summary>
            Called when a property of the edited object is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaInformation">
            <summary>
            The object edit metadata for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ShowPathAsTitleForEachProperty">
            <summary>
            Whether to show the property path as title for each property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.PathDisplayMode">
            <summary>
            The path display mode for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupingStyle">
            <summary>
            The grouping style for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.FilterMode">
            <summary>
            The filter mode for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Filter">
            <summary>
            The filter value for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoHideDisabledFields">
            <summary>
            Whether to automatically hide disabled fields.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DisableGrouping">
            <summary>
            Whether to disable grouping.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DefaultGroupName">
            <summary>
            The default group name for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DisableFieldFallback">
            <summary>
            Whether to disable field fallback.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.WrapInMudGrid">
            <summary>
            Whether to wrap the component in a MudGrid component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupsCollapsible">
            <summary>
            Whether groups are collapsible in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GlobalResetSettings">
            <summary>
            The global reset settings for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DefaultPropertyResetSettings">
            <summary>
            The default property reset settings for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ResetConfirmationMessageBoxOptions">
            <summary>
            The message box options for reset confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ResetConfirmationDialogOptions">
            <summary>
            The dialog options for reset confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaConfiguration">
            <summary>
            The action to perform for object metadata configuration.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaConfigurationAsync">
            <summary>
            The async action to perform for object metadata configuration.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarActionAlignment">
            <summary>
            The alignment of actions in the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarContent">
            <summary>
            The content to display in the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ConfigureBehaviourForRegisteredConfigurations">
            <summary>
            The behaviour how registered Meta and configured meta should applied
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ConfigureMetaInformationAlways">
            If this setting is true a manual passed MetaInformation will also re configured
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ErrorMessage">
            <summary>
            Error message to display
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BulkActionRunning">
            <summary>
            Is true if currently is a internal Bulk running. Like reset or clear etc..
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Editors">
            <summary>
            All rendered editors
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExpansionPanel">
            <summary>
            ExpansionPanels
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Ref">
            <summary>
            References to editors
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.UpdateAllConditions">
            <summary>
            Updates all conditions on meta settings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.UpdateConditions">
            <summary>
            Updates all conditions on meta settings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnFinishedRenderAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GetUpdatedValue">
            <summary>
            Returns the current value independent of disabled value bindings
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Reset">
            <summary>
            Resets all values
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Clear">
            <summary>
            Clears all input fields
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.RestoreState(System.Boolean)">
            <summary>
            Restore state if available and returns true if state was restored otherwise false.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DeleteState">
            <summary>
            Deletes the current state
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SaveState">
            <summary>
            Saves the current state
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnPropertyChange(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Called when a property value is changed
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1">
            <summary>
            Dialog for editing objects with the MudExObjectEditForm
            </summary>
            <typeparam name="T">Type of object being edited</typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OverwriteActionBar">
            <summary>
            If set to true, overwrite the standard action bar of the dialog with custom content.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.MudDialog">
            <summary>
            The MudDialog instance that represents the current dialog instance that is open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DisableSidePadding">
            <summary>
            If set to true, remove the side padding of the dialog content.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassDialog">
            <summary>
            The CSS class to apply to the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassContent">
            <summary>
            The CSS class to apply to the content area of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassDialogForm">
            <summary>
            The CSS class to apply to the form element of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassActions">
            <summary>
            The CSS class to apply to the action buttons of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassTitle">
            <summary>
            The CSS class to apply to the title of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ContentStyle">
            <summary>
            The CSS styles to apply to the content area of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogStyle">
            <summary>
            The CSS styles to apply to the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DefaultFocus">
            <summary>
            The default focus location for the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogIcon">
            <summary>
            The name of the icon to display in the dialog header area.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ErrorAnimation">
            <summary>
            The type of animation to display when an error occurs.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogIconColor">
            <summary>
            The color of the dialog icon for when the dialog is used in relation to a particular color theme.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.CustomSubmit">
            <summary>
            An optional custom submit function.
            If a string is returned that string will be treated as an error message and displayed in place of the default success message.
            Dialog will only closed if result of this function is empty or null otherwise result will displayed as error message.
            This can be useful to keep dialog open until server save is succeeded and not failed
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OnPropertyChange(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Customize what happens when a property changes.
            </summary>
            <param name="property">The property that has been changed.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OnSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Called when the form is submitted.
            </summary>
            <param name="ctx">The edit context that represents the current state of the form's data.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.Cancel">
            <summary>
            Called when the Cancel button is clicked.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1">
            <summary>
            Powerful component to edit an object and its properties.
            </summary>
            <typeparam name="T">Type of object being edited</typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.HasErrors">
            <summary>
            Returns true if there are any errors in the edit form fields
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Validated">
            <summary>
            Returns true if both FluentValidation and DataAnnotation validation have been completed successfully
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonVariant">
            <summary>
            The variant of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonVariant">
            <summary>
            The variant of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonColor">
            <summary>
            The color of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonColor">
            <summary>
            The color of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonIcon">
            <summary>
            The icon of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonIcon">
            <summary>
            The icon of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonIconAlignment">
            <summary>
            The alignment of the icon for the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonIconAlignment">
            <summary>
            The alignment of the icon for the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonAsIconButton">
            <summary>
            If true, display the cancel button as an icon button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonAsIconButton">
            <summary>
            If true, display the save button as an icon button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnValidSubmit">
            <summary>
            An event callback for when the form is successfully submitted
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnCancel">
            <summary>
            An event callback for when the cancel button is pressed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Elevation">
            <summary>
            The elevation of the card containing the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarColor">
            <summary>
            The color of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.StickyActionBar">
            <summary>
            If true, the action bar is sticky
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.StickyStickyActionBarBottom">
            <summary>
            The distance from the bottom of the viewport to the bottom of the sticky action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarStyle">
            <summary>
            The style of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarClass">
            <summary>
            The class of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.FormClass">
            <summary>
            The class of the form itself
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CardClass">
            <summary>
            The class of the card containing the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonText">
            <summary>
            The text displayed on the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonText">
            <summary>
            The text displayed on the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ShowSaveButton">
            <summary>
            If true, display the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ShowCancelButton">
            <summary>
            If true, display the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarActionAlignment">
            <summary>
            The alignment of the action bar buttons
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionContent">
            <summary>
            RenderFragment of action content
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.RenderActionContentFirst">
            <summary>
            If true, render action content before the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.RenderFormActionsInToolBar">
            <summary>
            If true, renders form actions (submit, cancel) in a tool bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Form">
            <summary>
            Reference to EditForm
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OverwriteActionBar">
            <summary>
            Returns true if OverwriteActionBar is false, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.UseFormSubmit">
            <summary>
            If true, submit the form on button click. Otherwise, do not submit until validation is complete
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SubmitButtonType">
            <summary>
            Returns the button type of the submit button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._fluentValidated">
            <summary>
            Returns true if FluentValidation validation was completed successfully, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._dataAnnotationsValidated">
            <summary>
            Returns true if DataAnnotation validation was completed successfully, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._dataValidations">
            <summary>
            Returns a list of validation results produced by DataAnnotation validation
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnSubmitButtonClick">
            <summary>
            Handles form submission when UseFormSubmit is false
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Called when the form is submitted
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Cancel">
            <summary>
            Resets the form
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetErrors">
            <summary>
            Returns a list of all errors in the form fields
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetFluentValidationErrors">
            <summary>
            Returns a list of validation errors produced by FluentValidation validation
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetDataAnnotationErrors">
            <summary>
            Returns a list of validation errors produced by DataAnnotation validation
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetActionBarStyle">
            <summary>
            Applies styles to the action bar based on properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetActionBarClass">
            <summary>
            Returns the class of the action bar based on properties
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit">
            <summary>
            Editor for a property of an object. Used internally inside the MudExObjectEdit
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExAppearance">
            <summary>
            The `MudExAppearance` class is a powerful tool that helps to manage CSS and styles of MudBlazor components dynamically. 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.Class">
            <summary>
            Class to apply
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.Style">
            <summary>
            CSS Style string to apply
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.KeepExisting">
            <summary>
            Set to false to overwrite all existing classes and styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.Empty">
            <summary>
            Factory method for an empty instance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(MudBlazor.Extensions.Core.IMudExStyleAppearance)">
            <summary>
            Adds style to this appearance from given appearance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Object,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Adds style to this appearance from given styleObj
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Object,System.String,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Adds style to this appearance from given styleObj
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.String)">
            <summary>
            Adds style to this appearance from given styleString
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Action{MudBlazor.Extensions.Helper.MudExStyleBuilder})">
            <summary>
            Adds style to this appearance with passing a fluent Action with a MudExStyleBuilder
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Func{MudBlazor.Extensions.Helper.MudExStyleBuilder,System.Threading.Tasks.Task})">
            <summary>
            Adds style to this appearance with passing a async Func with a MudExStyleBuilder
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(System.String,System.String[])">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExColor">
            <summary>
            MudExColor is a readonly struct that provides a convenient and type-safe way to deal with color values in the context of MudBlazor.Extensions components.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToCssStringValue(MudBlazor.Utilities.MudColorOutputFormats)">
            <summary>
            Creates a css compatible string representation of the color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToMudColorAsync">
            <summary>
            Creates a MudColor independent of what the underlying type is.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToMudColor">
            <summary>
            Creates a MudColor independent of what the underlying type is.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.GetColorsFromThemeAsync(System.Int32)">
            <summary>
            Static helper method to list colors from current Theme
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExSize`1">
            <summary>
            MudExSize is a readonly struct that provides a convenient and type-safe way to deal with size values in the context of MudBlazor components.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExSize`1.Value">
            <summary>
            The value of the size.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExSize`1.SizeUnit">
            <summary>
            The unit of the size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.#ctor(System.String)">
            <summary>
            Creates a new size by parsing an string like 3px or 10% etc
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.#ctor(`0,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Creates a new size
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.ToString">
            <summary>
            Returns the string representation that is fully compatible with all css sizes
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExColorUtils">
            <summary>
            MudExColor is a static utility class that provides a set of extension methods for working with Color and MudColor instances.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.CssVarName(MudBlazor.Color)">
            <summary>
            Returns the CSS variable name for the given color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.CssVarDeclaration(MudBlazor.Color)">
            <summary>
            Returns the CSS variable declaration for the given color. For example var(--mud-color-primary) for Color.Primary
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToDrawingColor(MudBlazor.Utilities.MudColor)">
            <summary>
            Converts a MudColor to a system drawing color
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToMudColorAsync(MudBlazor.Color)">
            <summary>
            Converts a Color enum value of Color (like Color.Primary) to a MudColor with the correct values filled
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCssBuilder">
            <summary>
            Simple Utility class to help with building css class strings
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExStyleBuilder">
            <summary>
            MudExStyleBuilder is useful to create style strings or convert any style to a class.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.Empty">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/>
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.FromObject(System.Object,System.String,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/> from an object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.FromStyle(System.String)">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/> from an existing style string.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.GenerateStyleString(System.Object,System.String)">
            <summary>
            Converts an object to a style string but only properties that are not passed in existingCss
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.GenerateStyleString(System.Object,MudBlazor.Extensions.Core.CssUnit,System.String)">
            <summary>
            Converts an object to a style string but only properties that are not passed in existingCss.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.CombineStyleStrings(System.String,System.String)">
            <summary>
            Combines two css style strings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.StyleStringToObject``1(System.String)">
            <summary>
            Converts a css style string to an object
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.With(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Adds a style to the builder if the condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.With(System.String,System.String,System.Boolean)">
            <summary>
            Adds a style to the builder if the condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.AsCssBuilderAsync">
            <summary>
            Creates a class for this style and returns a MudExCssBuilder with this class added
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.BuildAsClassRuleAsync(System.String,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Creates a class for this style and returns the name of the created class
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.RemoveClassRuleAsync(System.String,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Removes a class that is temporary created
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.Build">
            <summary>
            Builds the css style string
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.ToObject``1">
            <summary>
            Converts this style to an object
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExStyleBuilder.Style">
            <summary>
            The css style string
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.MudPopoverOptionsEx.ExcludedBlurSelectors">
            <summary>
            Click on any of this selectors will not close the popover if AutoHideOnBlur is true
            </summary>
        </member>
    </members>
</doc>
