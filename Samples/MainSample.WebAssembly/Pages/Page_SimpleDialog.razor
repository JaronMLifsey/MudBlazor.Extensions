@page "/simple-dialogs"
@using MudBlazor.Extensions.Core
@inject IJSRuntime js;
@inject IDialogService dialogService;

@attribute [Demo(Group = "Dialog Samples", Name = "Simple Dialogs", Order = 2, Icon = Icons.Material.Outlined.DesktopWindows)]

<PageHeader>Simple dialog helping methods</PageHeader>

<DemoComponent PageType="@GetType()">
    <MudGrid>
        <MudButton Class="mt-3" Size="Size.Large" OnClick="@Prompt" Variant="Variant.Filled" Color="Color.Primary">Simple Prompt</MudButton>
        <MudButton Class="mt-3 ml-3" Size="Size.Large" OnClick="@MessageBox" Variant="Variant.Outlined" Color="Color.Primary">Simple Confirmation</MudButton>
        <MudButton Class="mt-3 ml-3" Size="Size.Large" OnClick="@ShowInfo" Variant="Variant.Outlined" Color="Color.Secondary">Show info</MudButton>
    </MudGrid>
</DemoComponent>

@code {

    private async Task MessageBox()
    {
        var res = await dialogService.ShowConfirmationDialogAsync("Confirmation", "Are you sure?", "Yes", "No");
        if (res)
        {
            await js.InvokeVoidAsync("alert", "You clicked Yes");
        }
        else
        {
            await js.InvokeVoidAsync("alert", "You clicked No");
        }
    }

    private async Task Prompt()
    {
        var name = await dialogService.PromptAsync("Enter name", "Please enter your name", Icons.Material.Filled.VerifiedUser, s => !string.IsNullOrEmpty(s));
        if (name != null)
        {
            await js.InvokeVoidAsync("alert", $"Hello {name}");
        }
    }


    private async Task ShowInfo()
    {
        int seconds = 5;
        IMudExDialogReference<MudExMessageDialog>? dlg = await dialogService.ShowInformationAsync("Information", $"This is a simple information dialog that closes after {seconds} seconds", Icons.Material.Filled.Info, false, true);
        for (int i = 0; i < seconds; i++)
        {
            await Task.Delay(1000);
            dlg.ExecuteOnDialogComponent(dialog =>
            {
                dialog.ProgressValue = (i + 1) * 100 / seconds;
                dialog.Message = $"This is a simple information dialog that closes after {seconds - i - 1} seconds";
            });
        }

        dlg.Close();
    }

}
