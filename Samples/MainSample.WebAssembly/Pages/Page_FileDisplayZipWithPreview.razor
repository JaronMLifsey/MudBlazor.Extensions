@page "/file-display-zip"
@attribute [Demo(Group = "File Handling", Icon = Icons.Material.Outlined.FolderZip, ForComponentTypes = new[] { typeof(MudExFileDisplayZip) })]
@using MudBlazor.Extensions.Options
@using Nextended.Blazor.Extensions
@using Nextended.Blazor.Models
@inject NavigationManager NavigationManager
<PageHeader>File Display Zip with self made preview</PageHeader>

<DemoComponent PageType="@GetType()">
    
    <MudGrid Justify="Justify.Center" Style="height: 100%;width: 100%;overflow: auto;">
        <MudItem Style="width: 50%;height: 75vh;">
            <MudExFileDisplayZip AllowPreview="false"
                                 ShowContentError="false"
                                 @bind-Selected="@Selected"
                                 SelectionMode="ItemSelectionMode.Single"
                                 RootFolderName="sample.zip" Url="@(NavigationManager.ToAbsoluteUri("sample-data/sample.zip").AbsoluteUri)" ></MudExFileDisplayZip>
        </MudItem>
        <MudItem Style="width: 50%;height: 75vh;">
            <MudExFileDisplay ShowContentError="false"
                              FileName="@_selected?.FullName" ContentType="@_selected?.ContentType" Url="@_selectedUrl" ></MudExFileDisplay>
        </MudItem>
    </MudGrid>

</DemoComponent>


@code {

    private ZipBrowserFile _selected => Selected?.FirstOrDefault();
    private string _selectedUrl;
    private IList<ZipBrowserFile> _selectedList;

    public IList<ZipBrowserFile> Selected
    {
        get => _selectedList;
        set
        {
            _selectedList = value;
            _selected?.GetDataUrlAsync().ContinueWith(t =>
            {
                _selectedUrl = t.Result;
                StateHasChanged();
            });
        }
    }

}