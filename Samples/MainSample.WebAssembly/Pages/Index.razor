@inject NavigationManager Navi;
@inject HttpClient Http
@page "/"

@using MudBlazor.Extensions.Helper

<style>
    .mud-ex-object-edit-group-flat .mud-expand-panel-text:after {
        background-color: var(@Color.Secondary.CssVarName());
    }
</style>


<MudHidden Breakpoint="Breakpoint.SmAndDown">
    <MudExGradientText
        Animate="false"
        Style="margin-top: -100px;margin-bottom: 30px;" Align="Align.Center" Typo="Typo.h2">MudBlazor.Extensions</MudExGradientText>
</MudHidden>
<MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
    <MudExGradientText Animate="false"
                       Style="margin-top: -100px;margin-bottom: 30px;" Align="Align.Center" Typo="Typo.h4">MudBlazor.Extensions</MudExGradientText>
</MudHidden>
<Support />


<MudExpansionPanels MultiExpansion="true">
    <MudExpansionPanel IsInitiallyExpanded="true" Class="@($"mt-3 {("mud-ex-object-edit-group-flat")}")" Text="DEMOS">
        <MudExCardList TData="object">

            @foreach (var nav in DemoAttribute.AllEntries(true))
            {
                <MudCard Class="index-card" @onclick="@(() => { Open(nav); })">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@(nav.Demo?.RelatedComponents?.FirstOrDefault()?.Name?.Split('`')?.FirstOrDefault() ?? nav.Text)</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIcon Color="@nav.GetIconColor()" Icon="@nav.Icon" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@nav.Text</MudText>
                        @if (!string.IsNullOrEmpty(nav.Documentation))
                        {
                            <MudText Typo="Typo.body2">@nav.Documentation</MudText>
                        }
                    </MudCardContent>
                </MudCard>
            }
        </MudExCardList>
    </MudExpansionPanel>

    <MudExpansionPanel IsInitiallyExpanded="true" Class="@($"mt-3 {("mud-ex-object-edit-group-flat")}")" Text="ALL COMPONENTS">
        <MudExCardList HoverColor="Color.Info" TData="object">

            @foreach (var nav in Navigations.ReflectMudExComponents())
            {
                <MudCard Class="index-card" @onclick="@(() => { Open(nav); })">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@nav.Text</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @*<MudIconButton Icon="@nav.Icon" Color="Color.Default" />*@
                            <MudIcon Color="@nav.GetIconColor()" Icon="@nav.Icon" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@nav.Text</MudText>
                        @if (!string.IsNullOrEmpty(nav.Documentation))
                        {
                            <MudText Typo="Typo.body2">@nav.Documentation</MudText>
                        }
                    </MudCardContent>
                </MudCard>
            }
        </MudExCardList>
    </MudExpansionPanel>

</MudExpansionPanels>


@code
{

    private void Open(NavigationEntry nav)
    {
        Navi.NavigateTo(nav.Href);
        
    }
}