@using MudBlazor.Extensions.Attribute;
@using MudBlazor.Extensions.Helper
@using System.Reflection;

<div class="doc-header">

    <PageHeader>@(Api.GetTypeName(Type) ?? Fallback)</PageHeader>

    <MudAlert Style="margin-bottom: 40px; margin-left: -20px;">@Documentation</MudAlert>

    @if (betaInfos?.Any() == true)
    {
        <MudAlert Severity="Severity.Warning">@($"{Api.GetTypeName(Type)} - {string.Join("<br/>", betaInfos.Select(b => b.Message))}")</MudAlert>
    }
    
</div>


@code {

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetValue<Type>(nameof(Type), out var type) && Type != type)
        {
            Documentation = await MudExResource.GetDocumentationAsync(type);
            betaInfos = type.GetCustomAttributes<BetaAttribute>()?.ToList();
        }

        await base.SetParametersAsync(parameters);

    }


    private IList<BetaAttribute> betaInfos;
    
    [Parameter]
    public string? Documentation { get; set; } = null;
    
    [Parameter]
    public Type Type { get; set; }

    [Parameter]
    public string Fallback { get; set; }
}
