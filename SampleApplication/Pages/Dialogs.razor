@page "/dialogs"
@using MudBlazor.Extensions.Options
@using Nextended.Core.Extensions
@inject HttpClient Http
@inject IJSRuntime Js
@inject IDialogService dialogService;

<PageTitle>Sample Dialog</PageTitle>

<SampleApplication.Client.Shared.DemoComponent CodeFile="@($"Pages/{GetType().Name}.razor")" >
    <MudButton OnClick="@ShowSampleDialog" Variant="Variant.Filled" Color="Color.Primary">Show Sample Dialog</MudButton>

    <MudExObjectEdit DefaultGroupName="Other" Value="@Options"></MudExObjectEdit>
</SampleApplication.Client.Shared.DemoComponent>

@code {

    MudDialogButton[] GetButtons() => new[] {
        new MudDialogButton( DotNetObjectReference.Create(this as object), nameof(AlarmClick)) {Icon = Icons.Filled.Alarm},
        new MudDialogButton( DotNetObjectReference.Create(this as object), nameof(ColorLensClick)) {Icon = Icons.Filled.ColorLens},
    };
    
    [JSInvokable]
    public void AlarmClick()
    {
        Js.InvokeVoidAsync("alert", "Alarm Clicked ");
    }

    [JSInvokable]
    public void ColorLensClick()
    {
        Js.InvokeVoidAsync("alert", "Color Lens Clicked");
    }
    
    public DialogOptionsEx Options { get; set; } = new()
    {
            MaximizeButton = true,
            CloseButton = true,
            FullHeight = true,
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Medium,
            FullWidth = true,
            DragMode = MudDialogDragMode.Simple,
            Animations = new[] { AnimationType.SlideIn },
            Position = DialogPosition.CenterRight,
            DisableSizeMarginY = true,
            DisablePositionMargin = true
        };

    private async Task ShowSampleDialog()
    {
        var options = Options.Clone();
        options.Buttons = GetButtons();
        await dialogService.ShowEx<SampleDialog>("Simple Dialog", dialog => { dialog.ContentMessage = "Hello from dialog sample page"; },options);
    }

}
